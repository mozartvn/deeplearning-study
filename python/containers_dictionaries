# Dictionaries

# A dictionary stores (key, value) pairs, similar to a Map in Java or an object in Javascript. You an use it like this:
d = {'cat':'cute', 'dog':'furry'} # create
print(d['cat']) # get entry from a dictionary
print('cat' in d) # check if a dicionary has a given key
d['fish'] = 'wet' # set an entry in a dictionary
print(d['fish'])

print(d.get('monkey', 'N/A')) # Get an element with a default; prints "N/A"
print(d.get('fish', 'N/A')) # Get an element with a default; prints "wet"
del d['fish'] # remove an element from a dictionary
print(d.get('fish', 'N/A')) # "fish is no longer a key; prints "N/A"

# Loops: It is easy to iterate over the keys in dicionary:

d = {'person' : 2, 'cat' : 4, 'spider' : 8}
for animal in d:
  legs = d[animal]
  print ('A %s has %d legs' % (animal, legs))

# if you want to access to keys and their corresponding values, use the iteritems method:

d = {'person': 2, 'cat' : 4, 'spider' : 8}
for animal, legs in d.items(): # iteritmes : python 2
  print ('A %s has %d legs' % (animal, legs))

# Dictionary comprehensions: there are similar to list comprehensions, but allow you to easily construct dictionaries. For example:

nums = [0, 1, 2, 3, 4]
even_num_to_square = {x: x ** 2 for x in nums if x % 2 == 0}
print (even_num_to_square)